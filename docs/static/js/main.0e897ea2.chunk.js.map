{"version":3,"sources":["component/AddCategory.js","helpers/getGifs.js","component/GifGridItem.js","component/GifGrid.js","hooks/useFetchGif.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCatagories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","setLoading","setData","useEffect","then","useFetchGif","GitExpertApp","catagorias","setCategorias","categoria","idx","ReactDOM","render","document","getElementById"],"mappings":"2MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,EAAcE,GACdC,EAAc,KAId,SACI,uBACCI,KAAK,OACLC,MAAON,EACPO,SAfiB,SAACJ,GACvBF,EAAcE,EAAEK,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACJ,mCADI,SAEAC,MAAM,2CAAD,OAA6CC,UAAUH,GAAvD,6BADT,qCADI,cAEbI,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAaZL,GAbY,4CAAH,sDCEPQ,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EAEPX,oBAAS,GAFF,mBAE9B+B,EAF8B,KAErBC,EAFqB,OAGbhC,mBAAS,IAHI,mBAG9BiB,EAH8B,KAGxBgB,EAHwB,KAYrC,OAPAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAM,SAACf,GACrBa,EAAQb,GACRY,GAAW,QAEhB,CAACrB,IAEG,CAACoB,UAASd,QDVemB,CAAYzB,GAArCoB,EAD8B,EAC9BA,QAAeP,EADe,EACrBP,KAEhB,OACI,qCACI,6BAAKN,IAEJoB,GAAW,kDAEZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOL,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEgBvBgB,EA5BM,WACjB,IADuB,EAEarC,mBADf,CAAC,KADC,mBAEhBsC,EAFgB,KAEJC,EAFI,KAUvB,OACA,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaxC,cAVC,SAACkB,GACXsB,EAAc,CACVtB,GADS,mBACDqB,QAUhB,6BACMA,EAAWnB,KAAI,SAACqB,EAAUC,GAAX,OACT,cAAC,EAAD,CAEI9B,SAAU6B,GADLA,YClB7BE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0e897ea2.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCatagories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCatagories(inputValue);\r\n        setinputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>            \r\n            <input\r\n             type=\"text\"\r\n             value={inputValue}\r\n             onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCatagories : PropTypes.func.isRequired,\r\n}","export const getGifs = async (category)=> {\r\n    const apiKey = 'KIahMrRUL4MbnysTbeDvBWsstbTs1BEf';\r\n    const resp = await fetch(`https://api.giphy.com/v1/gifs/search?q==${ encodeURI(category) }&limit=10&api_key=${apiKey}`);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs =  data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    })\r\n\r\n    return(gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const {loading, data: images} = useFetchGif(category);\r\n   \r\n    return (\r\n        <>\r\n            <h1>{category}</h1>\r\n\r\n            {loading && <p>Cargando datos...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( ( img ) => (\r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            { ...img }\r\n                        />\r\n                        )\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import  { useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then( (img) => {\r\n            setData(img);\r\n            setLoading(false);\r\n        });\r\n    }, [category])\r\n\r\n    return {loading, data};\r\n}\r\n\r\n","\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './component/AddCategory';\r\nimport { GifGrid } from './component/GifGrid';\r\n\r\nconst GitExpertApp = () => {\r\n    const initialState = [''];\r\n    const [catagorias, setCategorias] = useState(initialState)\r\n\r\n    const handleAdd = (data) => {\r\n            setCategorias(\r\n               [data,...catagorias]\r\n            );\r\n    };\r\n\r\n    return(\r\n    <>\r\n        <h2>GitExpertApp</h2>\r\n        <hr />\r\n        <AddCategory setCatagories={handleAdd} />\r\n        \r\n        <ol>\r\n            { catagorias.map((categoria,idx) => \r\n                    <GifGrid \r\n                        key={categoria} \r\n                        category={categoria} />\r\n            )}\r\n\r\n        </ol>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GitExpertApp from './GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}